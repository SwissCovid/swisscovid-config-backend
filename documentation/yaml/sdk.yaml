openapi: 3.0.0
servers:
- url: https://demo.dpppt.org
  description: ''
info:
  version: 1.0-gapple
  description: DP3T API
  title: DP3T API
paths:
  /v1/:
    get:
      summary: hello
      description: Echo endpoint
      responses:
        '200':
          description: Hello from DP3T Config WS
          headers: {
            }
          content:
            application/json:
              schema:
                type: string
  /v1/config:
    get:
      summary: getConfig
      description: Read latest configuration and messages, depending on the version
        of the phone and the app.
      responses:
        '200':
          description: ConfigResponse structure with eventual notifications and epidemic
            parameters
          headers: {
            }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.ConfigResponse'
      parameters:
      - name: appversion
        in: query
        description: Version of the App installed
        example: ios-1.0.7
        required: true
        schema:
          type: string
      - name: osversion
        in: query
        description: Version of the OS
        example: ios13.6
        required: true
        schema:
          type: string
      - name: buildnr
        in: query
        description: Build number of the app
        example: ios-200619.2333.175
        required: true
        schema:
          type: string
  /v1/testinfobox/config:
    get:
      summary: getGhettoboxConfig
      description: getGhettoboxConfig
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.ConfigResponse'
      parameters:
      - name: appversion
        in: query
        description: Version of the App installed
        example: ios-1.0.7
        required: true
        schema:
          type: string
      - name: osversion
        in: query
        description: Version of the OS
        example: ios13.6
        required: true
        schema:
          type: string
      - name: buildnr
        in: query
        description: Build number of the app
        example: ios-200619.2333.175
        required: true
        schema:
          type: string
components:
  schemas:
    org.dpppt.switzerland.backend.sdk.config.ws.model.ConfigResponse:
      type: object
      properties:
        forceUpdate:
          type: boolean
          description: Blocks the app and shows a link to the app-store. The user
            can only continue once she updated the app
          example: ''
        infoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBoxCollection'
          - description: Holds a message translated in different languages
          - example: ''
        whatToDoPositiveTestTexts:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTextsCollection'
        testLocations:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocationCollection'
          - description: Holds a url for test locations for each canton and Liechtenstein
          - example: ''
        iOSGaenSdkConfig:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.GAENSDKConfig'
          - description: GAEN epidemiological parameters for iOS
          - example: ''
        androidGaenSdkConfig:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.GAENSDKConfig'
          - description: GAEN epidemiological parameters for Android
          - example: ''
        interOpsCountries:
          type: array
          items:
            type: string
          description: list of ISO 3166-1 alpha-2 country codes describing the available
            interops countries
        testInformationUrls:
          type: object
          description: Localized urls to test information website
          example: ''
          additionalProperties:
            type: string
        checkInUpdateNotificationEnabled:
          type: boolean
          description: Flag to enable notifications informing users about the new
            checkin feature
          example: ''
        vaccinationBookingCantons:
          type: object
          description: Holds vaccination booking infos for cantons by language
          example: ''
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.VaccinationBookingCanton'
        vaccinationBookingInfo:
          type: object
          description: Holds general vaccination booking info by language
          example: ''
          additionalProperties:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.VaccinationBookingInfo'
        showVaccinationInfo:
          type: boolean
          description: feature flag. when set to true the vaccination infos should
            be displayed
          example: ''
    org.dpppt.switzerland.backend.sdk.config.ws.model.FaqEntry:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        iconAndroid:
          type: string
        iconIos:
          type: string
        linkTitle:
          type: string
        linkUrl:
          type: string
    org.dpppt.switzerland.backend.sdk.config.ws.model.GAENSDKConfig:
      type: object
      properties:
        lowerThreshold:
          type: integer
          description: Lower threshold that is sent to the GAEN to count encounters
            with other devices. It is expressed in dB attenuation from the Bluetooth
            chip.
          example: '53'
        higherThreshold:
          type: integer
          description: Higher threshold that is sent to the GAEN to count encounters
            with other devices .It is expressed in dB attenuation from the Bluetooth
            chip.
          example: '60'
        factorLow:
          type: number
          format: double
          description: Multiplication factor used to weigh the return value of the
            GAEN in attenuationDuration[0]
          example: 1.0d
        factorHigh:
          type: number
          format: double
          description: Multiplication factor used to weigh the return value of the
            GAEN in attenuationDuration[1]
          example: 0.5d
        triggerThreshold:
          type: integer
          description: Minimum duration of exposure during one day reported by the
            GAEN before the user is alerted of an exposure risk
          example: '15'
    org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox:
      type: object
      properties:
        title:
          type: string
          description: Title of the infobox
          example: Alert
        msg:
          type: string
          description: Message shown to the user
          example: Please restart your phone
        url:
          type: string
          description: If given, adds a url to the message
          example: https://dp-3t.github.io/
        urlTitle:
          type: string
          description: Title to be shown for the URL
          example: DP3T page
        isDismissible:
          type: boolean
          description: If true, the user can dismiss the message
          example: 'true'
        hearingImpairedInfo:
          type: string
          description: Text to display in hearing impaired pop up
          example: ''
    org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBoxCollection:
      type: object
      properties:
        deInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        frInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        itInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        enInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        ptInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        esInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        sqInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        bsInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        hrInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        srInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        rmInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        trInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        tiInfoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
    org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation:
      type: object
      properties:
        region:
          type: string
        url:
          type: string
    org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocationCollection:
      type: object
      properties:
        de:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        fr:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        it:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        en:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        pt:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        es:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        sq:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        bs:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        hr:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        sr:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        rm:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        tr:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
        ti:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.TestLocation'
    org.dpppt.switzerland.backend.sdk.config.ws.model.VaccinationBookingCanton:
      type: object
      required:
      - name
      - iconAndroid
      - iconIos
      - linkUrl
      properties:
        name:
          type: string
        iconAndroid:
          type: string
        iconIos:
          type: string
        linkUrl:
          type: string
    org.dpppt.switzerland.backend.sdk.config.ws.model.VaccinationBookingInfo:
      type: object
      required:
      - title
      - text
      - info
      properties:
        title:
          type: string
        text:
          type: string
        info:
          type: string
    org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts:
      type: object
      properties:
        enterCovidcodeBoxSupertitle:
          type: string
        enterCovidcodeBoxTitle:
          type: string
        enterCovidcodeBoxText:
          type: string
        enterCovidcodeBoxButtonTitle:
          type: string
        infoBox:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.InfoBox'
        faqEntries:
          type: array
          items:
            $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.FaqEntry'
    org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTextsCollection:
      type: object
      properties:
        de:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        fr:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        it:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        en:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        pt:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        es:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        sq:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        bs:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        hr:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        sr:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        rm:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        tr:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
        ti:
          allOf:
          - $ref: '#/components/schemas/org.dpppt.switzerland.backend.sdk.config.ws.model.WhatToDoPositiveTestTexts'
